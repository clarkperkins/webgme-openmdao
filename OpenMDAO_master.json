{
  "bases": {},
  "root": {
    "path": "",
    "guid": "d66be110-32d6-de93-11f7-ee447c299f04"
  },
  "relids": {
    "0390817f-4b1d-a518-4b09-1b71d1bdeb43": "2045677486",
    "07bf17d3-8e1c-a340-c2df-dd03c978dc17": "2129776339",
    "0bb5cda8-87eb-e662-9f07-72e3a95a4122": "630009173",
    "277db7b2-0374-ae2c-33a2-aef27617507e": "1230365237",
    "2ce191e1-b9c4-e7f0-a5bb-e986d3fb3037": "1618543893",
    "3de63e9c-0e5e-9513-c534-4e44bac01892": "11683344",
    "4c23c4f4-61ae-7bd8-f014-a61bb02bdb9b": "837587575",
    "53f4c2a9-b871-7017-0d24-15e5d26f8b29": "706409006",
    "5911924a-0cdf-e249-003f-cff74da83ea4": "652588028",
    "5ddb8500-7f2b-4160-88d5-fdefa6b5a462": "1389286276",
    "6b187b90-df6c-be5f-b94a-f01e8107179a": "1705646120",
    "9d8b711b-8428-4ab1-88ea-db7dfb898b1b": "1009706732",
    "bb4547b0-2de7-8984-c3d0-08271e6024a6": "2058300937",
    "c199d9cc-5046-1140-5fa2-2f31933b3383": "22575864",
    "c6fdb155-fbb0-5f21-78ae-1674cf9a659c": "2130642426",
    "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045": "1",
    "d66be110-32d6-de93-11f7-ee447c299f04": null,
    "ee1686d8-423a-5393-822a-0f3729220820": "2144081363",
    "f9430a47-db67-b5e4-6490-3d4704f1c767": "271811148",
    "f9f90a96-e289-d7dc-0d85-3e950d3a2a6d": "687799989"
  },
  "containment": {
    "07bf17d3-8e1c-a340-c2df-dd03c978dc17": {},
    "c199d9cc-5046-1140-5fa2-2f31933b3383": {
      "0bb5cda8-87eb-e662-9f07-72e3a95a4122": {},
      "2ce191e1-b9c4-e7f0-a5bb-e986d3fb3037": {},
      "3de63e9c-0e5e-9513-c534-4e44bac01892": {},
      "4c23c4f4-61ae-7bd8-f014-a61bb02bdb9b": {},
      "53f4c2a9-b871-7017-0d24-15e5d26f8b29": {},
      "5ddb8500-7f2b-4160-88d5-fdefa6b5a462": {},
      "6b187b90-df6c-be5f-b94a-f01e8107179a": {},
      "c6fdb155-fbb0-5f21-78ae-1674cf9a659c": {},
      "f9f90a96-e289-d7dc-0d85-3e950d3a2a6d": {}
    },
    "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045": {},
    "f9430a47-db67-b5e4-6490-3d4704f1c767": {
      "277db7b2-0374-ae2c-33a2-aef27617507e": {},
      "5911924a-0cdf-e249-003f-cff74da83ea4": {
        "0390817f-4b1d-a518-4b09-1b71d1bdeb43": {},
        "9d8b711b-8428-4ab1-88ea-db7dfb898b1b": {},
        "ee1686d8-423a-5393-822a-0f3729220820": {}
      },
      "bb4547b0-2de7-8984-c3d0-08271e6024a6": {}
    }
  },
  "nodes": {
    "0390817f-4b1d-a518-4b09-1b71d1bdeb43": {
      "attributes": {
        "name": "x"
      },
      "base": "4c23c4f4-61ae-7bd8-f014-a61bb02bdb9b",
      "meta": {},
      "parent": "5911924a-0cdf-e249-003f-cff74da83ea4",
      "pointers": {
        "base": "4c23c4f4-61ae-7bd8-f014-a61bb02bdb9b"
      },
      "registry": {
        "position": {
          "x": 195,
          "y": 173
        }
      },
      "sets": {}
    },
    "07bf17d3-8e1c-a340-c2df-dd03c978dc17": {
      "attributes": {
        "name": "Example"
      },
      "base": "2ce191e1-b9c4-e7f0-a5bb-e986d3fb3037",
      "meta": {},
      "parent": "d66be110-32d6-de93-11f7-ee447c299f04",
      "pointers": {
        "base": "2ce191e1-b9c4-e7f0-a5bb-e986d3fb3037"
      },
      "registry": {
        "position": {
          "x": 320,
          "y": 230
        }
      },
      "sets": {}
    },
    "0bb5cda8-87eb-e662-9f07-72e3a95a4122": {
      "attributes": {
        "name": "Component",
        "package": ""
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {
        "children": {
          "minItems": [
            -1,
            -1
          ],
          "maxItems": [
            -1,
            -1
          ],
          "items": [
            "4c23c4f4-61ae-7bd8-f014-a61bb02bdb9b",
            "c6fdb155-fbb0-5f21-78ae-1674cf9a659c"
          ]
        },
        "attributes": {
          "package": {
            "type": "string",
            "default": ""
          }
        }
      },
      "parent": "c199d9cc-5046-1140-5fa2-2f31933b3383",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
      },
      "registry": {
        "isAbstract": false,
        "position": {
          "x": 70,
          "y": 338
        }
      },
      "sets": {}
    },
    "277db7b2-0374-ae2c-33a2-aef27617507e": {
      "attributes": {},
      "base": "f9f90a96-e289-d7dc-0d85-3e950d3a2a6d",
      "meta": {},
      "parent": "f9430a47-db67-b5e4-6490-3d4704f1c767",
      "pointers": {
        "base": "f9f90a96-e289-d7dc-0d85-3e950d3a2a6d",
        "dst": "ee1686d8-423a-5393-822a-0f3729220820",
        "src": "9d8b711b-8428-4ab1-88ea-db7dfb898b1b"
      },
      "registry": {
        "position": {
          "x": 100,
          "y": 100
        }
      },
      "sets": {}
    },
    "2ce191e1-b9c4-e7f0-a5bb-e986d3fb3037": {
      "attributes": {
        "name": "Assembly"
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {
        "children": {
          "minItems": [
            -1,
            1,
            -1,
            -1,
            -1
          ],
          "maxItems": [
            -1,
            1,
            -1,
            -1,
            -1
          ],
          "items": [
            "2ce191e1-b9c4-e7f0-a5bb-e986d3fb3037",
            "5ddb8500-7f2b-4160-88d5-fdefa6b5a462",
            "f9f90a96-e289-d7dc-0d85-3e950d3a2a6d",
            "0bb5cda8-87eb-e662-9f07-72e3a95a4122",
            "53f4c2a9-b871-7017-0d24-15e5d26f8b29"
          ]
        }
      },
      "parent": "c199d9cc-5046-1140-5fa2-2f31933b3383",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
      },
      "registry": {
        "isAbstract": false,
        "position": {
          "x": 70,
          "y": 176
        }
      },
      "sets": {}
    },
    "3de63e9c-0e5e-9513-c534-4e44bac01892": {
      "attributes": {
        "name": "D_out"
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {},
      "parent": "c199d9cc-5046-1140-5fa2-2f31933b3383",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
      },
      "registry": {
        "isAbstract": false,
        "isPort": true,
        "position": {
          "x": 426,
          "y": 257
        }
      },
      "sets": {}
    },
    "4c23c4f4-61ae-7bd8-f014-a61bb02bdb9b": {
      "attributes": {
        "name": "C_in"
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {},
      "parent": "c199d9cc-5046-1140-5fa2-2f31933b3383",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
      },
      "registry": {
        "isAbstract": false,
        "isPort": true,
        "position": {
          "x": 244,
          "y": 342
        }
      },
      "sets": {}
    },
    "53f4c2a9-b871-7017-0d24-15e5d26f8b29": {
      "attributes": {
        "name": "C_inputs"
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {
        "pointers": {
          "dst": {
            "items": [
              "4c23c4f4-61ae-7bd8-f014-a61bb02bdb9b"
            ],
            "min": 1,
            "max": 1,
            "minItems": [
              -1
            ],
            "maxItems": [
              1
            ]
          },
          "src": {
            "items": [
              "3de63e9c-0e5e-9513-c534-4e44bac01892"
            ],
            "min": 1,
            "max": 1,
            "minItems": [
              -1
            ],
            "maxItems": [
              1
            ]
          }
        }
      },
      "parent": "c199d9cc-5046-1140-5fa2-2f31933b3383",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
        "dst": null,
        "src": null
      },
      "registry": {
        "isAbstract": false,
        "position": {
          "x": 252,
          "y": 436
        }
      },
      "sets": {}
    },
    "5911924a-0cdf-e249-003f-cff74da83ea4": {
      "attributes": {
        "name": "Paraboloid",
        "package": "openmdao.examples.simple.paraboloid"
      },
      "base": "0bb5cda8-87eb-e662-9f07-72e3a95a4122",
      "meta": {},
      "parent": "f9430a47-db67-b5e4-6490-3d4704f1c767",
      "pointers": {
        "base": "0bb5cda8-87eb-e662-9f07-72e3a95a4122"
      },
      "registry": {
        "position": {
          "x": 320,
          "y": 177
        }
      },
      "sets": {}
    },
    "5ddb8500-7f2b-4160-88d5-fdefa6b5a462": {
      "attributes": {
        "name": "Driver"
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {
        "children": {
          "minItems": [
            -1,
            -1
          ],
          "maxItems": [
            -1,
            -1
          ],
          "items": [
            "6b187b90-df6c-be5f-b94a-f01e8107179a",
            "3de63e9c-0e5e-9513-c534-4e44bac01892"
          ]
        }
      },
      "parent": "c199d9cc-5046-1140-5fa2-2f31933b3383",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
      },
      "registry": {
        "isAbstract": false,
        "position": {
          "x": 70,
          "y": 260
        }
      },
      "sets": {}
    },
    "6b187b90-df6c-be5f-b94a-f01e8107179a": {
      "attributes": {
        "name": "D_in"
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {},
      "parent": "c199d9cc-5046-1140-5fa2-2f31933b3383",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
      },
      "registry": {
        "isAbstract": false,
        "isPort": true,
        "position": {
          "x": 247,
          "y": 259
        }
      },
      "sets": {}
    },
    "9d8b711b-8428-4ab1-88ea-db7dfb898b1b": {
      "attributes": {
        "name": "f_xy"
      },
      "base": "c6fdb155-fbb0-5f21-78ae-1674cf9a659c",
      "meta": {},
      "parent": "5911924a-0cdf-e249-003f-cff74da83ea4",
      "pointers": {
        "base": "c6fdb155-fbb0-5f21-78ae-1674cf9a659c"
      },
      "registry": {
        "position": {
          "x": 479,
          "y": 218
        }
      },
      "sets": {}
    },
    "bb4547b0-2de7-8984-c3d0-08271e6024a6": {
      "attributes": {},
      "base": "5ddb8500-7f2b-4160-88d5-fdefa6b5a462",
      "meta": {},
      "parent": "f9430a47-db67-b5e4-6490-3d4704f1c767",
      "pointers": {
        "base": "5ddb8500-7f2b-4160-88d5-fdefa6b5a462"
      },
      "registry": {
        "position": {
          "x": 332,
          "y": 327
        }
      },
      "sets": {}
    },
    "c199d9cc-5046-1140-5fa2-2f31933b3383": {
      "attributes": {
        "name": "MetaLanguage"
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {
        "children": {
          "minItems": [
            -1
          ],
          "maxItems": [
            -1
          ],
          "items": [
            "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
          ]
        }
      },
      "parent": "d66be110-32d6-de93-11f7-ee447c299f04",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
      },
      "registry": {
        "isAbstract": false,
        "position": {
          "x": 78,
          "y": 107
        }
      },
      "sets": {}
    },
    "c6fdb155-fbb0-5f21-78ae-1674cf9a659c": {
      "attributes": {
        "name": "C_out"
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {},
      "parent": "c199d9cc-5046-1140-5fa2-2f31933b3383",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
      },
      "registry": {
        "isAbstract": false,
        "isPort": true,
        "position": {
          "x": 426,
          "y": 340
        }
      },
      "sets": {}
    },
    "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045": {
      "attributes": {
        "name": "FCO"
      },
      "base": null,
      "meta": {
        "children": {
          "minItems": [],
          "maxItems": [],
          "items": []
        },
        "attributes": {
          "name": {
            "type": "string"
          }
        },
        "pointers": {},
        "aspects": {},
        "constraints": {
          "meta": {
            "script": "function(core, node, callback) {\n    \"use strict\";\n    var error = null,\n        returnValue = {hasViolation:false,message:\"\"},\n        i,\n        neededChekings = 4,\n        meta = core.getJsonMeta(node),\n        typeIndexOfChild = function(typePathsArray,childNode){\n            var index = -1;\n\n            while(childNode && index === -1){\n                index = typePathsArray.indexOf(core.getPath(childNode));\n                childNode = core.getBase(childNode);\n            }\n\n            return index;\n        },\n        checkChildrenRules = function(){\n            var childCount = [],\n                index;\n            core.loadChildren(node,function(err,children){\n                if(err){\n                    returnValue.message += \"error during loading of node\\'s children\\n\";\n                    error = error || err;\n                    return checkingDone();\n                }\n\n                //global count check\n                //min\n                if(meta.children.min && meta.children.min !== -1){\n                    if(children.length < meta.children.min){\n                        returnValue.hasVialoation = true;\n                        returnValue.message += \"node hase fewer nodes than needed\\n\";\n                    }\n                }\n                //max\n                if(meta.children.max && meta.children.max !== -1){\n                    if(children.length > meta.children.max){\n                        returnValue.hasVialoation = true;\n                        returnValue.message += \"node hase more nodes than allowed\\n\";\n                    }\n                }\n\n                //typedCounts\n                for(i=0;i<meta.children.items.length;i++){\n                    childCount.push(0);\n                }\n                for(i=0;i<children.length;i++){\n                    index = typeIndexOfChild(meta.children.items,children[i]);\n                    if(index === -1 ){\n                        returnValue.hasViolation = true;\n                        returnValue.message += \"child \" + core.getGuid(children[i]) +\" is from prohibited type\\n\";\n                    }\n                    else {\n                        childCount[index]++;\n                    }\n                }\n                for(i=0;i<meta.children.items.length;i++){\n                    //min\n                    if(meta.children.minItems[i] !== -1){\n                        if(meta.children.minItems[i] > childCount[i]){\n                            returnValue.hasViolation = true;\n                            returnValue.message += \"too few type \"+ meta.children.items[i] +\" children\\n\";\n                        }\n                    }\n                    //max\n                    if(meta.children.maxItems[i] !== -1){\n                        if(meta.children.maxItems[i] < childCount[i]){\n                            returnValue.hasViolation = true;\n                            returnValue.message += \"too many type \"+ meta.children.items[i] +\" children\\n\";\n                        }\n                    }\n                }\n                return checkingDone();\n            });\n        },\n        checkPointerRules = function(){\n            //TODO currently there is no quantity check\n            var validNames = core.getValidPointerNames(node),\n                names = core.getPointerNames(node),\n                checkPointer = function(name){\n                    core.loadPointer(node,name,function(err,target){\n                        if(err || !target){\n                            error = error || err;\n                            returnValue.message += \"error during pointer \"+ name +\" load\\n\";\n                            return checkDone();\n                        }\n\n                        if(!core.isValidTargetOf(target,node,name)){\n                            returnValue.hasVialoation = true;\n                            returnValue.message += \"target of pointer \"+ name +\" is invalid\\n\";\n                        }\n                        return checkDone();\n                    });\n                },\n                checkDone = function(){\n                    if(--needs === 0){\n                        checkingDone();\n                    }\n                },\n                needs,i;\n            \n            needs = names.length;\n            if(needs > 0){\n                for(i=0;i<names.length;i++){\n                    if(validNames.indexOf(names[i]) === -1){\n                        returnValue.hasVialoation = true;\n                        returnValue.message += \" invalid pointer \"+ names[i] +\" has been found\\n\";\n                        checkDone();\n                    } else {\n                        checkPointer(names[i]);\n                    }\n\n                }\n            } else {\n                checkDone();\n            }\n\n        },\n        checkSetRules = function(){\n            //TODO this part is missing yet\n            checkingDone();\n        },\n        checkAttributeRules = function(){\n            var names = core.getAttributeNames(node),\n                validNames = core.getValidAttributeNames(node);\n            for(i=0;i<names.length;i++){\n                if(validNames.indexOf(names[i]) !== -1){\n                    if(!core.isValidAttributeValueOf(node,names[i],core.getAttribute(node,names[i]))){\n                        returnValue.hasViolation = true;\n                        returnValue.message += \"attribute \"+names[i]+\" has invalid value\\n\";\n                    }\n                }\n                else {\n                    returnValue.hasViolation = true;\n                    returnValue.message += \"node has an undefined attribute: \"+names[i];\n                }\n            }\n            checkingDone();\n        },\n        checkingDone = function(){\n            if(--neededChekings === 0){\n                callback(error,returnValue);\n            }\n        };\n\n    checkChildrenRules();\n    checkPointerRules();\n    checkSetRules();\n    checkAttributeRules();\n}",
            "priority": 10,
            "info": "this constraint will check all the meta rules defined to an object"
          }
        }
      },
      "parent": "d66be110-32d6-de93-11f7-ee447c299f04",
      "pointers": {
        "base": null
      },
      "registry": {
        "DisplayFormat": "$name",
        "PortSVGIcon": "",
        "SVGIcon": "",
        "decorator": "",
        "isAbstract": true,
        "isPort": false,
        "position": {
          "x": 363,
          "y": 59
        }
      },
      "sets": {}
    },
    "d66be110-32d6-de93-11f7-ee447c299f04": {
      "attributes": {
        "name": "root"
      },
      "base": null,
      "meta": {
        "children": {
          "minItems": [
            -1
          ],
          "maxItems": [
            -1
          ],
          "items": [
            "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
          ]
        },
        "attributes": {
          "name": {
            "type": "string"
          }
        },
        "pointers": {},
        "aspects": {},
        "constraints": {}
      },
      "parent": null,
      "pointers": {
        "base": null
      },
      "registry": {
        "MetaSheets": [
          {
            "SetID": "MetaAspectSet_a55675bf-d048-d42e-bfa2-a2e02770dcb8",
            "order": 0,
            "title": "META"
          }
        ],
        "ProjectRegistry": {
          "FCO_ID": "/1"
        },
        "usedAddOns": "ConstraintAddOn",
        "validPlugins": "OpenMDAO PluginGenerator"
      },
      "sets": {
        "MetaAspectSet": [
          {
            "attributes": {},
            "guid": "0bb5cda8-87eb-e662-9f07-72e3a95a4122",
            "registry": {
              "position": {
                "x": 769,
                "y": 165
              }
            }
          },
          {
            "attributes": {},
            "guid": "2ce191e1-b9c4-e7f0-a5bb-e986d3fb3037",
            "registry": {
              "position": {
                "x": 707,
                "y": 63
              }
            }
          },
          {
            "attributes": {},
            "guid": "3de63e9c-0e5e-9513-c534-4e44bac01892",
            "registry": {
              "position": {
                "x": 783,
                "y": 456
              }
            }
          },
          {
            "attributes": {},
            "guid": "4c23c4f4-61ae-7bd8-f014-a61bb02bdb9b",
            "registry": {
              "position": {
                "x": 631,
                "y": 31
              }
            }
          },
          {
            "attributes": {},
            "guid": "53f4c2a9-b871-7017-0d24-15e5d26f8b29",
            "registry": {
              "position": {
                "x": 854,
                "y": 102
              }
            }
          },
          {
            "attributes": {},
            "guid": "5ddb8500-7f2b-4160-88d5-fdefa6b5a462",
            "registry": {
              "position": {
                "x": 779,
                "y": 244
              }
            }
          },
          {
            "attributes": {},
            "guid": "6b187b90-df6c-be5f-b94a-f01e8107179a",
            "registry": {
              "position": {
                "x": 859,
                "y": 421
              }
            }
          },
          {
            "attributes": {},
            "guid": "c199d9cc-5046-1140-5fa2-2f31933b3383",
            "registry": {
              "position": {
                "x": 70,
                "y": 55
              }
            }
          },
          {
            "attributes": {},
            "guid": "c6fdb155-fbb0-5f21-78ae-1674cf9a659c",
            "registry": {
              "position": {
                "x": 598,
                "y": 127
              }
            }
          },
          {
            "attributes": {},
            "guid": "f9f90a96-e289-d7dc-0d85-3e950d3a2a6d",
            "registry": {
              "position": {
                "x": 845,
                "y": 334
              }
            }
          }
        ],
        "MetaAspectSet_a55675bf-d048-d42e-bfa2-a2e02770dcb8": [
          {
            "attributes": {},
            "guid": "0bb5cda8-87eb-e662-9f07-72e3a95a4122",
            "registry": {
              "position": {
                "x": 316,
                "y": 131
              }
            }
          },
          {
            "attributes": {},
            "guid": "2ce191e1-b9c4-e7f0-a5bb-e986d3fb3037",
            "registry": {
              "position": {
                "x": 460,
                "y": 56
              }
            }
          },
          {
            "attributes": {},
            "guid": "3de63e9c-0e5e-9513-c534-4e44bac01892",
            "registry": {
              "position": {
                "x": 583,
                "y": 315
              }
            }
          },
          {
            "attributes": {},
            "guid": "4c23c4f4-61ae-7bd8-f014-a61bb02bdb9b",
            "registry": {
              "position": {
                "x": 190,
                "y": 171
              }
            }
          },
          {
            "attributes": {},
            "guid": "53f4c2a9-b871-7017-0d24-15e5d26f8b29",
            "registry": {
              "position": {
                "x": 253,
                "y": 439
              }
            }
          },
          {
            "attributes": {},
            "guid": "5ddb8500-7f2b-4160-88d5-fdefa6b5a462",
            "registry": {
              "position": {
                "x": 569,
                "y": 170
              }
            }
          },
          {
            "attributes": {},
            "guid": "6b187b90-df6c-be5f-b94a-f01e8107179a",
            "registry": {
              "position": {
                "x": 731,
                "y": 180
              }
            }
          },
          {
            "attributes": {},
            "guid": "c199d9cc-5046-1140-5fa2-2f31933b3383",
            "registry": {
              "position": {
                "x": 134,
                "y": 46
              }
            }
          },
          {
            "attributes": {},
            "guid": "c6fdb155-fbb0-5f21-78ae-1674cf9a659c",
            "registry": {
              "position": {
                "x": 340,
                "y": 314
              }
            }
          },
          {
            "attributes": {},
            "guid": "f9f90a96-e289-d7dc-0d85-3e950d3a2a6d",
            "registry": {
              "position": {
                "x": 736,
                "y": 428
              }
            }
          }
        ]
      }
    },
    "ee1686d8-423a-5393-822a-0f3729220820": {
      "attributes": {
        "name": "y"
      },
      "base": "4c23c4f4-61ae-7bd8-f014-a61bb02bdb9b",
      "meta": {},
      "parent": "5911924a-0cdf-e249-003f-cff74da83ea4",
      "pointers": {
        "base": "4c23c4f4-61ae-7bd8-f014-a61bb02bdb9b"
      },
      "registry": {
        "position": {
          "x": 208,
          "y": 268
        }
      },
      "sets": {}
    },
    "f9430a47-db67-b5e4-6490-3d4704f1c767": {
      "attributes": {
        "name": "Parabaloid"
      },
      "base": "2ce191e1-b9c4-e7f0-a5bb-e986d3fb3037",
      "meta": {},
      "parent": "d66be110-32d6-de93-11f7-ee447c299f04",
      "pointers": {
        "base": "2ce191e1-b9c4-e7f0-a5bb-e986d3fb3037"
      },
      "registry": {
        "position": {
          "x": 133,
          "y": 233
        }
      },
      "sets": {}
    },
    "f9f90a96-e289-d7dc-0d85-3e950d3a2a6d": {
      "attributes": {
        "name": "C_outputs"
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {
        "pointers": {
          "dst": {
            "items": [
              "6b187b90-df6c-be5f-b94a-f01e8107179a",
              "4c23c4f4-61ae-7bd8-f014-a61bb02bdb9b"
            ],
            "min": 1,
            "max": 1,
            "minItems": [
              -1,
              -1
            ],
            "maxItems": [
              1,
              1
            ]
          },
          "src": {
            "items": [
              "c6fdb155-fbb0-5f21-78ae-1674cf9a659c"
            ],
            "min": 1,
            "max": 1,
            "minItems": [
              -1
            ],
            "maxItems": [
              1
            ]
          }
        }
      },
      "parent": "c199d9cc-5046-1140-5fa2-2f31933b3383",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
        "dst": null,
        "src": null
      },
      "registry": {
        "isAbstract": false,
        "position": {
          "x": 435,
          "y": 437
        }
      },
      "sets": {}
    }
  },
  "metaSheets": {}
}