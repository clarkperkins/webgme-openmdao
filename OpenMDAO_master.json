{
  "bases": {},
  "root": {
    "path": "",
    "guid": "38c8f113-df7b-fc28-0d1a-f42d73d45254"
  },
  "relids": {
    "0da0c46d-dab4-54cd-b2be-6c2264349da2": "1792980098",
    "18ea788b-2eb9-82a2-4370-a2944a99d51a": "562736667",
    "1fcaa7c8-e7b1-31ac-10c7-b8ec7e97fc57": "512687710",
    "26b7ba2b-2290-a298-76cb-523734dcd8d2": "758513781",
    "2a0fc65f-d2b8-00a6-71bd-84f257c54254": "610982904",
    "35de2499-e5ab-19e6-240b-3cb6ecbb0c22": "381808471",
    "38c8f113-df7b-fc28-0d1a-f42d73d45254": null,
    "437666a4-f664-4f35-cfd4-cb8f16b6a7b9": "1237026146",
    "48be2b06-704b-1b0d-5cd5-1b7dc63c05e1": "1281655630",
    "7e59f579-fa65-a139-bcfe-664abf5a1a3b": "1135469800",
    "7f35695c-81f1-566b-3c77-3effd0805b83": "506965338",
    "a461d7a6-abe0-a69e-e44f-d215340133b3": "651638879",
    "ac65e230-3457-a31f-d780-ee21201daa30": "567570843",
    "af1db5f5-143a-fba6-9cd9-a55093e56125": "1628230356",
    "c6d8e9b9-6dc0-1ae6-15be-147f48b6d4c6": "853183009",
    "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045": "1",
    "cda0285c-2ca1-05d7-9625-1c5ca4d6d963": "1792904716",
    "ceb98f28-1c51-cb46-4d75-7bccf1ecd944": "441602185",
    "e39ee0cb-b5ef-b41d-d9b4-11263972048a": "223935600",
    "fd1b2bef-f859-49d2-e378-eba968ee639c": "803713342"
  },
  "containment": {
    "18ea788b-2eb9-82a2-4370-a2944a99d51a": {
      "2a0fc65f-d2b8-00a6-71bd-84f257c54254": {
        "0da0c46d-dab4-54cd-b2be-6c2264349da2": {},
        "1fcaa7c8-e7b1-31ac-10c7-b8ec7e97fc57": {},
        "cda0285c-2ca1-05d7-9625-1c5ca4d6d963": {}
      },
      "437666a4-f664-4f35-cfd4-cb8f16b6a7b9": {},
      "ac65e230-3457-a31f-d780-ee21201daa30": {},
      "af1db5f5-143a-fba6-9cd9-a55093e56125": {},
      "fd1b2bef-f859-49d2-e378-eba968ee639c": {}
    },
    "7f35695c-81f1-566b-3c77-3effd0805b83": {
      "26b7ba2b-2290-a298-76cb-523734dcd8d2": {},
      "35de2499-e5ab-19e6-240b-3cb6ecbb0c22": {},
      "48be2b06-704b-1b0d-5cd5-1b7dc63c05e1": {},
      "7e59f579-fa65-a139-bcfe-664abf5a1a3b": {},
      "a461d7a6-abe0-a69e-e44f-d215340133b3": {},
      "c6d8e9b9-6dc0-1ae6-15be-147f48b6d4c6": {},
      "ceb98f28-1c51-cb46-4d75-7bccf1ecd944": {},
      "e39ee0cb-b5ef-b41d-d9b4-11263972048a": {}
    },
    "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045": {}
  },
  "nodes": {
    "0da0c46d-dab4-54cd-b2be-6c2264349da2": {
      "attributes": {
        "name": "x",
        "unit": "cm",
        "value": "8.2"
      },
      "base": "e39ee0cb-b5ef-b41d-d9b4-11263972048a",
      "meta": {},
      "parent": "2a0fc65f-d2b8-00a6-71bd-84f257c54254",
      "pointers": {
        "base": "e39ee0cb-b5ef-b41d-d9b4-11263972048a"
      },
      "registry": {
        "position": {
          "x": 89,
          "y": 200
        }
      },
      "sets": {}
    },
    "18ea788b-2eb9-82a2-4370-a2944a99d51a": {
      "attributes": {
        "name": "ParaboloidUnconstrained"
      },
      "base": "7e59f579-fa65-a139-bcfe-664abf5a1a3b",
      "meta": {},
      "parent": "38c8f113-df7b-fc28-0d1a-f42d73d45254",
      "pointers": {
        "base": "7e59f579-fa65-a139-bcfe-664abf5a1a3b"
      },
      "registry": {
        "position": {
          "x": 119,
          "y": 239
        }
      },
      "sets": {}
    },
    "1fcaa7c8-e7b1-31ac-10c7-b8ec7e97fc57": {
      "attributes": {
        "name": "f_xy",
        "unit": "cm",
        "value": "f_xy"
      },
      "base": "a461d7a6-abe0-a69e-e44f-d215340133b3",
      "meta": {},
      "parent": "2a0fc65f-d2b8-00a6-71bd-84f257c54254",
      "pointers": {
        "base": "a461d7a6-abe0-a69e-e44f-d215340133b3"
      },
      "registry": {
        "position": {
          "x": 440,
          "y": 225
        }
      },
      "sets": {}
    },
    "26b7ba2b-2290-a298-76cb-523734dcd8d2": {
      "attributes": {
        "name": "objective"
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {
        "pointers": {
          "src": {
            "items": [
              "a461d7a6-abe0-a69e-e44f-d215340133b3"
            ],
            "min": 1,
            "max": 1,
            "minItems": [
              -1
            ],
            "maxItems": [
              1
            ]
          },
          "dst": {
            "items": [
              "ceb98f28-1c51-cb46-4d75-7bccf1ecd944"
            ],
            "min": 1,
            "max": 1,
            "minItems": [
              -1
            ],
            "maxItems": [
              1
            ]
          }
        }
      },
      "parent": "7f35695c-81f1-566b-3c77-3effd0805b83",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
        "dst": null,
        "src": null
      },
      "registry": {
        "isAbstract": false,
        "lineEndArrow": "block-xwide-xlong",
        "position": {
          "x": 620,
          "y": 351
        }
      },
      "sets": {}
    },
    "2a0fc65f-d2b8-00a6-71bd-84f257c54254": {
      "attributes": {
        "class_name": "Paraboloid",
        "name": "par1",
        "package": "openmdao.examples.simple.paraboloid"
      },
      "base": "48be2b06-704b-1b0d-5cd5-1b7dc63c05e1",
      "meta": {},
      "parent": "18ea788b-2eb9-82a2-4370-a2944a99d51a",
      "pointers": {
        "base": "48be2b06-704b-1b0d-5cd5-1b7dc63c05e1"
      },
      "registry": {
        "position": {
          "x": 333,
          "y": 55
        }
      },
      "sets": {}
    },
    "35de2499-e5ab-19e6-240b-3cb6ecbb0c22": {
      "attributes": {
        "high": "",
        "low": "",
        "name": "parameter"
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {
        "attributes": {
          "low": {
            "type": "string",
            "default": ""
          },
          "high": {
            "type": "string",
            "default": ""
          }
        },
        "pointers": {
          "dst": {
            "items": [
              "e39ee0cb-b5ef-b41d-d9b4-11263972048a"
            ],
            "min": 1,
            "max": 1,
            "minItems": [
              -1
            ],
            "maxItems": [
              1
            ]
          },
          "src": {
            "items": [
              "ceb98f28-1c51-cb46-4d75-7bccf1ecd944"
            ],
            "min": 1,
            "max": 1,
            "minItems": [
              -1
            ],
            "maxItems": [
              1
            ]
          }
        }
      },
      "parent": "7f35695c-81f1-566b-3c77-3effd0805b83",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
        "dst": null,
        "src": null
      },
      "registry": {
        "isAbstract": false,
        "lineEndArrow": "block-xwide-xlong",
        "position": {
          "x": 367,
          "y": 347
        }
      },
      "sets": {}
    },
    "38c8f113-df7b-fc28-0d1a-f42d73d45254": {
      "attributes": {
        "name": "ROOT"
      },
      "base": null,
      "meta": {
        "children": {
          "minItems": [
            -1
          ],
          "maxItems": [
            -1
          ],
          "items": [
            "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
          ]
        },
        "attributes": {
          "name": {
            "type": "string"
          }
        },
        "pointers": {},
        "aspects": {},
        "constraints": {}
      },
      "parent": null,
      "pointers": {
        "base": null
      },
      "registry": {
        "MetaSheets": [
          {
            "SetID": "MetaAspectSet_2fa21824-7e96-e988-1133-0d085600cdd4",
            "order": 0,
            "title": "META"
          }
        ],
        "ProjectRegistry": {
          "FCO_ID": "/1"
        },
        "usedAddOns": "ConstraintAddOn",
        "validPlugins": "OpenMDAO PluginGenerator"
      },
      "sets": {
        "MetaAspectSet": [
          {
            "attributes": {},
            "guid": "26b7ba2b-2290-a298-76cb-523734dcd8d2",
            "registry": {
              "position": {
                "x": 669,
                "y": 394
              }
            }
          },
          {
            "attributes": {},
            "guid": "35de2499-e5ab-19e6-240b-3cb6ecbb0c22",
            "registry": {
              "position": {
                "x": 208,
                "y": 360
              }
            }
          },
          {
            "attributes": {},
            "guid": "48be2b06-704b-1b0d-5cd5-1b7dc63c05e1",
            "registry": {
              "position": {
                "x": 540,
                "y": 270
              }
            }
          },
          {
            "attributes": {},
            "guid": "7e59f579-fa65-a139-bcfe-664abf5a1a3b",
            "registry": {
              "position": {
                "x": 541,
                "y": 102
              }
            }
          },
          {
            "attributes": {},
            "guid": "7f35695c-81f1-566b-3c77-3effd0805b83",
            "registry": {
              "position": {
                "x": 401,
                "y": 127
              }
            }
          },
          {
            "attributes": {},
            "guid": "a461d7a6-abe0-a69e-e44f-d215340133b3",
            "registry": {
              "position": {
                "x": 337,
                "y": 366
              }
            }
          },
          {
            "attributes": {},
            "guid": "c6d8e9b9-6dc0-1ae6-15be-147f48b6d4c6",
            "registry": {
              "position": {
                "x": 71,
                "y": 430
              }
            }
          },
          {
            "attributes": {},
            "guid": "ceb98f28-1c51-cb46-4d75-7bccf1ecd944",
            "registry": {
              "position": {
                "x": 750,
                "y": 271
              }
            }
          },
          {
            "attributes": {},
            "guid": "e39ee0cb-b5ef-b41d-d9b4-11263972048a",
            "registry": {
              "position": {
                "x": 183,
                "y": 346
              }
            }
          }
        ],
        "MetaAspectSet_2fa21824-7e96-e988-1133-0d085600cdd4": [
          {
            "attributes": {},
            "guid": "26b7ba2b-2290-a298-76cb-523734dcd8d2",
            "registry": {
              "position": {
                "x": 669,
                "y": 394
              }
            }
          },
          {
            "attributes": {},
            "guid": "35de2499-e5ab-19e6-240b-3cb6ecbb0c22",
            "registry": {
              "position": {
                "x": 357,
                "y": 400
              }
            }
          },
          {
            "attributes": {},
            "guid": "48be2b06-704b-1b0d-5cd5-1b7dc63c05e1",
            "registry": {
              "position": {
                "x": 271,
                "y": 133
              }
            }
          },
          {
            "attributes": {},
            "guid": "7e59f579-fa65-a139-bcfe-664abf5a1a3b",
            "registry": {
              "position": {
                "x": 479,
                "y": 97
              }
            }
          },
          {
            "attributes": {},
            "guid": "7f35695c-81f1-566b-3c77-3effd0805b83",
            "registry": {
              "position": {
                "x": 75,
                "y": 55
              }
            }
          },
          {
            "attributes": {},
            "guid": "a461d7a6-abe0-a69e-e44f-d215340133b3",
            "registry": {
              "position": {
                "x": 326,
                "y": 243
              }
            }
          },
          {
            "attributes": {},
            "guid": "c6d8e9b9-6dc0-1ae6-15be-147f48b6d4c6",
            "registry": {
              "position": {
                "x": 71,
                "y": 430
              }
            }
          },
          {
            "attributes": {},
            "guid": "ceb98f28-1c51-cb46-4d75-7bccf1ecd944",
            "registry": {
              "position": {
                "x": 681,
                "y": 123
              }
            }
          },
          {
            "attributes": {},
            "guid": "e39ee0cb-b5ef-b41d-d9b4-11263972048a",
            "registry": {
              "position": {
                "x": 95,
                "y": 239
              }
            }
          }
        ]
      }
    },
    "437666a4-f664-4f35-cfd4-cb8f16b6a7b9": {
      "attributes": {},
      "base": "26b7ba2b-2290-a298-76cb-523734dcd8d2",
      "meta": {},
      "parent": "18ea788b-2eb9-82a2-4370-a2944a99d51a",
      "pointers": {
        "base": "26b7ba2b-2290-a298-76cb-523734dcd8d2",
        "dst": "af1db5f5-143a-fba6-9cd9-a55093e56125",
        "src": "1fcaa7c8-e7b1-31ac-10c7-b8ec7e97fc57"
      },
      "registry": {
        "position": {
          "x": 100,
          "y": 100
        }
      },
      "sets": {}
    },
    "48be2b06-704b-1b0d-5cd5-1b7dc63c05e1": {
      "attributes": {
        "class_name": "",
        "name": "Component",
        "package": ""
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {
        "children": {
          "minItems": [
            -1,
            -1
          ],
          "maxItems": [
            1,
            -1
          ],
          "items": [
            "a461d7a6-abe0-a69e-e44f-d215340133b3",
            "e39ee0cb-b5ef-b41d-d9b4-11263972048a"
          ]
        },
        "attributes": {
          "package": {
            "type": "string",
            "default": ""
          },
          "class_name": {
            "type": "string",
            "default": ""
          }
        }
      },
      "parent": "7f35695c-81f1-566b-3c77-3effd0805b83",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
      },
      "registry": {
        "isAbstract": false,
        "position": {
          "x": 180,
          "y": 127
        }
      },
      "sets": {}
    },
    "7e59f579-fa65-a139-bcfe-664abf5a1a3b": {
      "attributes": {
        "name": "Assembly"
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {
        "children": {
          "minItems": [
            -1,
            -1,
            -1,
            -1,
            -1
          ],
          "maxItems": [
            -1,
            -1,
            1,
            -1,
            -1
          ],
          "items": [
            "26b7ba2b-2290-a298-76cb-523734dcd8d2",
            "c6d8e9b9-6dc0-1ae6-15be-147f48b6d4c6",
            "ceb98f28-1c51-cb46-4d75-7bccf1ecd944",
            "35de2499-e5ab-19e6-240b-3cb6ecbb0c22",
            "48be2b06-704b-1b0d-5cd5-1b7dc63c05e1"
          ]
        }
      },
      "parent": "7f35695c-81f1-566b-3c77-3effd0805b83",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
      },
      "registry": {
        "isAbstract": false,
        "position": {
          "x": 372,
          "y": 28
        }
      },
      "sets": {}
    },
    "7f35695c-81f1-566b-3c77-3effd0805b83": {
      "attributes": {
        "name": "MetaLanguage"
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {
        "children": {
          "minItems": [
            -1
          ],
          "maxItems": [
            -1
          ],
          "items": [
            "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
          ]
        }
      },
      "parent": "38c8f113-df7b-fc28-0d1a-f42d73d45254",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
      },
      "registry": {
        "isAbstract": false,
        "position": {
          "x": 401,
          "y": 127
        }
      },
      "sets": {}
    },
    "a461d7a6-abe0-a69e-e44f-d215340133b3": {
      "attributes": {
        "name": "C_OUT",
        "unit": "",
        "value": ""
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {
        "attributes": {
          "value": {
            "type": "string",
            "default": ""
          },
          "unit": {
            "type": "string",
            "default": ""
          }
        }
      },
      "parent": "7f35695c-81f1-566b-3c77-3effd0805b83",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
      },
      "registry": {
        "isAbstract": false,
        "isPort": true,
        "position": {
          "x": 267,
          "y": 239
        }
      },
      "sets": {}
    },
    "ac65e230-3457-a31f-d780-ee21201daa30": {
      "attributes": {
        "high": "50",
        "low": "-50"
      },
      "base": "35de2499-e5ab-19e6-240b-3cb6ecbb0c22",
      "meta": {},
      "parent": "18ea788b-2eb9-82a2-4370-a2944a99d51a",
      "pointers": {
        "base": "35de2499-e5ab-19e6-240b-3cb6ecbb0c22",
        "dst": "0da0c46d-dab4-54cd-b2be-6c2264349da2",
        "src": "af1db5f5-143a-fba6-9cd9-a55093e56125"
      },
      "registry": {
        "position": {
          "x": 100,
          "y": 100
        }
      },
      "sets": {}
    },
    "af1db5f5-143a-fba6-9cd9-a55093e56125": {
      "attributes": {
        "class_name": "SLSQPdriver",
        "name": "driver",
        "objective": "parabaloid.f_xy",
        "package": "openmdao.lib.drivers.api"
      },
      "base": "ceb98f28-1c51-cb46-4d75-7bccf1ecd944",
      "meta": {},
      "parent": "18ea788b-2eb9-82a2-4370-a2944a99d51a",
      "pointers": {
        "base": "ceb98f28-1c51-cb46-4d75-7bccf1ecd944"
      },
      "registry": {
        "position": {
          "x": 424,
          "y": 285
        }
      },
      "sets": {}
    },
    "c6d8e9b9-6dc0-1ae6-15be-147f48b6d4c6": {
      "attributes": {
        "name": "connection"
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {
        "pointers": {
          "src": {
            "items": [
              "a461d7a6-abe0-a69e-e44f-d215340133b3"
            ],
            "min": 1,
            "max": 1,
            "minItems": [
              -1
            ],
            "maxItems": [
              1
            ]
          },
          "dst": {
            "items": [
              "e39ee0cb-b5ef-b41d-d9b4-11263972048a"
            ],
            "min": 1,
            "max": 1,
            "minItems": [
              -1
            ],
            "maxItems": [
              1
            ]
          }
        }
      },
      "parent": "7f35695c-81f1-566b-3c77-3effd0805b83",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
        "dst": null,
        "src": null
      },
      "registry": {
        "isAbstract": false,
        "lineEndArrow": "block-xwide-xlong",
        "position": {
          "x": 141,
          "y": 350
        }
      },
      "sets": {}
    },
    "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045": {
      "attributes": {
        "name": "FCO"
      },
      "base": null,
      "meta": {
        "children": {
          "minItems": [],
          "maxItems": [],
          "items": []
        },
        "attributes": {
          "name": {
            "type": "string"
          }
        },
        "pointers": {},
        "aspects": {},
        "constraints": {
          "meta": {
            "script": "function(core, node, callback) {\n    \"use strict\";\n    var error = null,\n        returnValue = {hasViolation:false,message:\"\"},\n        i,\n        neededChekings = 4,\n        meta = core.getJsonMeta(node),\n        typeIndexOfChild = function(typePathsArray,childNode){\n            var index = -1;\n\n            while(childNode && index === -1){\n                index = typePathsArray.indexOf(core.getPath(childNode));\n                childNode = core.getBase(childNode);\n            }\n\n            return index;\n        },\n        checkChildrenRules = function(){\n            var childCount = [],\n                index;\n            core.loadChildren(node,function(err,children){\n                if(err){\n                    returnValue.message += \"error during loading of node\\'s children\\n\";\n                    error = error || err;\n                    return checkingDone();\n                }\n\n                //global count check\n                //min\n                if(meta.children.min && meta.children.min !== -1){\n                    if(children.length < meta.children.min){\n                        returnValue.hasVialoation = true;\n                        returnValue.message += \"node hase fewer nodes than needed\\n\";\n                    }\n                }\n                //max\n                if(meta.children.max && meta.children.max !== -1){\n                    if(children.length > meta.children.max){\n                        returnValue.hasVialoation = true;\n                        returnValue.message += \"node hase more nodes than allowed\\n\";\n                    }\n                }\n\n                //typedCounts\n                for(i=0;i<meta.children.items.length;i++){\n                    childCount.push(0);\n                }\n                for(i=0;i<children.length;i++){\n                    index = typeIndexOfChild(meta.children.items,children[i]);\n                    if(index === -1 ){\n                        returnValue.hasViolation = true;\n                        returnValue.message += \"child \" + core.getGuid(children[i]) +\" is from prohibited type\\n\";\n                    }\n                    else {\n                        childCount[index]++;\n                    }\n                }\n                for(i=0;i<meta.children.items.length;i++){\n                    //min\n                    if(meta.children.minItems[i] !== -1){\n                        if(meta.children.minItems[i] > childCount[i]){\n                            returnValue.hasViolation = true;\n                            returnValue.message += \"too few type \"+ meta.children.items[i] +\" children\\n\";\n                        }\n                    }\n                    //max\n                    if(meta.children.maxItems[i] !== -1){\n                        if(meta.children.maxItems[i] < childCount[i]){\n                            returnValue.hasViolation = true;\n                            returnValue.message += \"too many type \"+ meta.children.items[i] +\" children\\n\";\n                        }\n                    }\n                }\n                return checkingDone();\n            });\n        },\n        checkPointerRules = function(){\n            //TODO currently there is no quantity check\n            var validNames = core.getValidPointerNames(node),\n                names = core.getPointerNames(node),\n                checkPointer = function(name){\n                    core.loadPointer(node,name,function(err,target){\n                        if(err || !target){\n                            error = error || err;\n                            returnValue.message += \"error during pointer \"+ name +\" load\\n\";\n                            return checkDone();\n                        }\n\n                        if(!core.isValidTargetOf(target,node,name)){\n                            returnValue.hasVialoation = true;\n                            returnValue.message += \"target of pointer \"+ name +\" is invalid\\n\";\n                        }\n                        return checkDone();\n                    });\n                },\n                checkDone = function(){\n                    if(--needs === 0){\n                        checkingDone();\n                    }\n                },\n                needs,i;\n            \n            needs = names.length;\n            if(needs > 0){\n                for(i=0;i<names.length;i++){\n                    if(validNames.indexOf(names[i]) === -1){\n                        returnValue.hasVialoation = true;\n                        returnValue.message += \" invalid pointer \"+ names[i] +\" has been found\\n\";\n                        checkDone();\n                    } else {\n                        checkPointer(names[i]);\n                    }\n\n                }\n            } else {\n                checkDone();\n            }\n\n        },\n        checkSetRules = function(){\n            //TODO this part is missing yet\n            checkingDone();\n        },\n        checkAttributeRules = function(){\n            var names = core.getAttributeNames(node),\n                validNames = core.getValidAttributeNames(node);\n            for(i=0;i<names.length;i++){\n                if(validNames.indexOf(names[i]) !== -1){\n                    if(!core.isValidAttributeValueOf(node,names[i],core.getAttribute(node,names[i]))){\n                        returnValue.hasViolation = true;\n                        returnValue.message += \"attribute \"+names[i]+\" has invalid value\\n\";\n                    }\n                }\n                else {\n                    returnValue.hasViolation = true;\n                    returnValue.message += \"node has an undefined attribute: \"+names[i];\n                }\n            }\n            checkingDone();\n        },\n        checkingDone = function(){\n            if(--neededChekings === 0){\n                callback(error,returnValue);\n            }\n        };\n\n    checkChildrenRules();\n    checkPointerRules();\n    checkSetRules();\n    checkAttributeRules();\n}",
            "priority": 10,
            "info": "this constraint will check all the meta rules defined to an object"
          }
        }
      },
      "parent": "38c8f113-df7b-fc28-0d1a-f42d73d45254",
      "pointers": {
        "base": null
      },
      "registry": {
        "DisplayFormat": "$name",
        "PortSVGIcon": "",
        "SVGIcon": "",
        "decorator": "",
        "isAbstract": true,
        "isPort": false,
        "position": {
          "x": 100,
          "y": 100
        }
      },
      "sets": {}
    },
    "cda0285c-2ca1-05d7-9625-1c5ca4d6d963": {
      "attributes": {
        "name": "y",
        "unit": "cm",
        "value": "5.3"
      },
      "base": "e39ee0cb-b5ef-b41d-d9b4-11263972048a",
      "meta": {},
      "parent": "2a0fc65f-d2b8-00a6-71bd-84f257c54254",
      "pointers": {
        "base": "e39ee0cb-b5ef-b41d-d9b4-11263972048a"
      },
      "registry": {
        "position": {
          "x": 92,
          "y": 281
        }
      },
      "sets": {}
    },
    "ceb98f28-1c51-cb46-4d75-7bccf1ecd944": {
      "attributes": {
        "class_name": "",
        "hasObjective": false,
        "hasObjectives": false,
        "hasParameters": false,
        "name": "Driver",
        "package": ""
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {
        "attributes": {
          "class_name": {
            "type": "string",
            "default": ""
          },
          "package": {
            "type": "string",
            "default": ""
          },
          "hasParameters": {
            "type": "boolean",
            "default": false
          },
          "hasObjective": {
            "type": "boolean",
            "default": false
          },
          "hasObjectives": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "parent": "7f35695c-81f1-566b-3c77-3effd0805b83",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
      },
      "registry": {
        "isAbstract": false,
        "position": {
          "x": 598,
          "y": 140
        }
      },
      "sets": {}
    },
    "e39ee0cb-b5ef-b41d-d9b4-11263972048a": {
      "attributes": {
        "name": "C_IN",
        "unit": "",
        "value": ""
      },
      "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045",
      "meta": {
        "attributes": {
          "value": {
            "type": "string",
            "default": ""
          },
          "unit": {
            "type": "string",
            "default": ""
          }
        }
      },
      "parent": "7f35695c-81f1-566b-3c77-3effd0805b83",
      "pointers": {
        "base": "cd891e7b-e2ea-e929-f6cd-9faf4f1fc045"
      },
      "registry": {
        "isAbstract": false,
        "isPort": true,
        "position": {
          "x": 67,
          "y": 236
        }
      },
      "sets": {}
    },
    "fd1b2bef-f859-49d2-e378-eba968ee639c": {
      "attributes": {
        "high": "50",
        "low": "-50"
      },
      "base": "35de2499-e5ab-19e6-240b-3cb6ecbb0c22",
      "meta": {},
      "parent": "18ea788b-2eb9-82a2-4370-a2944a99d51a",
      "pointers": {
        "base": "35de2499-e5ab-19e6-240b-3cb6ecbb0c22",
        "dst": "cda0285c-2ca1-05d7-9625-1c5ca4d6d963",
        "src": "af1db5f5-143a-fba6-9cd9-a55093e56125"
      },
      "registry": {
        "position": {
          "x": 100,
          "y": 100
        }
      },
      "sets": {}
    }
  },
  "metaSheets": {}
}